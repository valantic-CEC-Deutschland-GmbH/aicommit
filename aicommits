#!/usr/bin/php
<?php

function runCommand($command): string
{
    exec($command, $output, $returnCode);
    if ($returnCode !== 0) {
        throw new Exception("Command $command failed with exit code $returnCode");
    }

    return implode("\n", $output);
}

function checkIfCommitsAreStaged(): bool
{
    try {
        $result = runCommand('git diff --staged');
        if ($result === '') {
            return false;
        }
    } catch (Exception $e) {
        return false;
    }

    return true;
}

function generateCommitMessageFromDiff($diff): string
{
    $prompt = 'Given the following git patch file, generate a one-sentence long git commit message. Return only the commit message without comments or other text.';

    $openAiKey = getenv('OPENAI_KEY');
    $endpoint = 'https://api.openai.com/v1/chat/completions';

    $data = [
        'temperature' => 0,
        'model' => 'gpt-3.5-turbo',
        'messages' => [
            [
                'role' => 'system',
                'content' => $prompt,
            ],
            [
                'role' => 'user',
                'content' => $diff,
            ],
        ],
        'max_tokens' => 128,
    ];

    $headers = [
        'Content-Type: application/json',
        'Authorization: Bearer ' . $openAiKey,
    ];

    $ch = curl_init($endpoint);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $response = curl_exec($ch);
    curl_close($ch);

    $responseData = json_decode($response, true);
    $message = $responseData['choices'][0]['message']['content'];

    return str_replace(['"', "\n", "'"], '', $message);
}

function getDiffCommand(): string
{
    $excludeList = [
        'package-lock.json',
        '*.lock',
    ];

    $excluded = implode(
        ' ',
        array_map(fn($entry): string => sprintf(
            "'%s%s'",
            ':!',
            $entry
        ), $excludeList)
    );

    return 'git diff'
        . ' --staged'
        . ' --minimal'
        . ' --ignore-all-space'
        . ' --unified=0'
        . ' -- . ' . $excluded;
}

function sliceDiff(string $diff): string
{
    return substr($diff, 0, 5000);
}

if (basename(__FILE__) === basename($_SERVER['PHP_SELF'])) {
    if (!checkIfCommitsAreStaged()) {
        echo 'No staged commits';
        exit(0);
    }

    $diff = runCommand(getDiffCommand());
    $diff = sliceDiff($diff);
    $commitMessage = generateCommitMessageFromDiff($diff);

    echo $commitMessage;
}
